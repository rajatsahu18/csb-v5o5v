{"version":3,"sources":["Redux/actionTypes.js","Redux/reducer.js","Redux/store.js","Redux/action.js","Components/style.js","Components/LoadingIndicator.jsx","Components/PatientTable.jsx","Components/MainHeading.jsx","Components/Patient.jsx","App.js","index.js"],"names":["GET_PATIENT_REQUEST","GET_PATIENT_SUCCESS","GET_PATIENT_FAILURE","initState","clinic","isLoading","isError","rootReducer","combineReducers","state","type","payload","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","a","getClinicData","dispatch","axios","get","then","res","getPatientSuccess","data","catch","err","LoadingWrapper","styled","div","MainHeadingWrapper","Image","img","Heading","h1","ButtonWrapper","Button","button","ButtonsHeading","h3","LoadingIndicator","src","alt","PatientTable","id","patient_name","sex","arrival_time","doctor","notification","useSelector","onDragEnd","results","tempUser","splice","source","selectedRow","detination","handleDragEnd","droppableId","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","placeholder","MainHeading","Patient","useDispatch","shallowEqual","React","useEffect","useState","sortByTime","setSortByTime","sortAsc","setSortAsc","sortDesc","setSortDesc","doctors","setDoctors","gender","setGender","sort","b","localeCompare","map","item","i","onClick","onSortAsc","onSortDesc","filter","Ava","Nelson","Male","Female","doctorCondition","genderCondition","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1c2f50af.chunk.js","sourcesContent":["export const GET_PATIENT_REQUEST = \"GET_PATIENT_REQUEST\";\nexport const GET_PATIENT_SUCCESS = \"GET_PATIENT_SUCCESS\";\nexport const GET_PATIENT_FAILURE = \"GET_PATIENT_FAILURE\";\n","import {\n  GET_PATIENT_FAILURE,\n  GET_PATIENT_REQUEST,\n  GET_PATIENT_SUCCESS\n} from \"./actionTypes\";\n\nconst initState = {\n  clinic: [],\n  isLoading: false,\n  isError: false\n};\n\nexport const getDataReducer = (state = initState, { type, payload }) => {\n  switch (type) {\n    case GET_PATIENT_REQUEST: {\n      return {\n        ...state,\n        isLoading: true\n      };\n    }\n\n    case GET_PATIENT_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false,\n        clinic: payload\n      };\n    }\n\n    case GET_PATIENT_FAILURE: {\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { getDataReducer } from \"./reducer\";\n\nconst rootReducer = combineReducers({\n  clinic: getDataReducer\n});\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    typeof window.__REDUX_DEVTOOLS_EXTENSION__ === \"undefined\"\n      ? (a) => a\n      : window.__REDUX_DEVTOOLS_EXTENSION__ &&\n          window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n","import axios from \"axios\";\nimport {\n  GET_PATIENT_FAILURE,\n  GET_PATIENT_REQUEST,\n  GET_PATIENT_SUCCESS\n} from \"./actionTypes\";\n\nexport const getPatientRequest = () => {\n  return {\n    type: GET_PATIENT_REQUEST\n  };\n};\n\nexport const getPatientSuccess = (payload) => {\n  return {\n    type: GET_PATIENT_SUCCESS,\n    payload\n  };\n};\n\nexport const getPatientFailure = () => {\n  return {\n    type: GET_PATIENT_FAILURE\n  };\n};\n\nexport const getClinicData = (payload) => (dispatch) => {\n  dispatch(getPatientRequest());\n  axios\n    .get(\"https://json-server-projects.herokuapp.com/clinicData\")\n    .then((res) => {\n      dispatch(getPatientSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(getPatientFailure());\n    });\n};\n","import styled from \"styled-components\";\n\nexport const LoadingWrapper = styled.div`\n  img {\n    width: 20rem;\n    margin-top: 12rem;\n  }\n`;\n\nexport const MainHeadingWrapper = styled.div`\n  background: #9f1d48;\n  padding: 0.3rem;\n  width: 40%;\n  margin: 2rem 0 0 28rem;\n  border-top-left-radius: 2rem;\n  border-bottom-right-radius: 2rem;\n\n  h1 {\n    margin-left: 2rem;\n    color: #ffffff;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 30vmax;\n  margin-top: 2rem;\n`;\n\nexport const Heading = styled.h1`\n  border: 1px solid #9f1d48;\n  background: #9f1d48;\n  color: #ffffff;\n  padding: 0.5rem;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  margin: 0 14% 5% 13%;\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #4bd9c6;\n  border-radius: 10px;\n  background: #4bd9c6;\n  color: #ffffff;\n  font-weight: 600;\n  padding: 0.5rem;\n  margin: 0.7rem;\n  width: 5rem;\n  cursor: pointer;\n`;\n\nexport const ButtonsHeading = styled.h3`\n  border: 1px solid #3d4191;\n  background: #3d4191;\n  color: #ffffff;\n  padding: 0.5rem;\n  width: 100%;\n`;\n","import React from \"react\";\nimport { LoadingWrapper } from \"./style\";\n\nexport const LoadingIndicator = () => {\n  return (\n    <LoadingWrapper>\n      <img\n        src=\"https://i.pinimg.com/originals/bd/e8/92/bde8923f0022a1681ee0e2c560640b31.gif\"\n        alt=\"loading\"\n      />\n    </LoadingWrapper>\n  );\n};\n","import React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useSelector } from \"react-redux\";\n// import { Table, TableCell, TableRow } from \"./style\";\nimport styles from \"./Patient.module.css\";\n\nexport const PatientTable = ({\n  id,\n  type,\n  patient_name,\n  sex,\n  arrival_time,\n  doctor,\n  notification\n}) => {\n  const clinic = useSelector((state) => state.clinic);\n\n  const handleDragEnd = (results) => {\n    let tempUser = [...clinic];\n    let [selectedRow] = tempUser.splice(results.source.id, 1);\n    tempUser.splice(results.detination.id, 0, selectedRow);\n    // setClinic(tempUser);\n  };\n\n  return (\n    <>\n      <DragDropContext onDragEnd={(results) => handleDragEnd(results)}>\n        <table>\n          <Droppable droppableId=\"tbody\">\n            {(provided) => (\n              <tbody ref={provided.innerRef} {...provided.droppableProps}>\n                <Draggable draggableId={patient_name}>\n                  {(provided) => (\n                    <tr\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <td>{id}</td>\n                      <td>{type}</td>\n                      <td>{patient_name}</td>\n                      <td>{sex}</td>\n                      <td>{arrival_time}</td>\n                      <td>{doctor}</td>\n                    </tr>\n                  )}\n                </Draggable>\n                {provided.placeholder}\n              </tbody>\n            )}\n          </Droppable>\n        </table>\n      </DragDropContext>\n    </>\n  );\n};\n","import React from \"react\";\nimport { MainHeadingWrapper } from \"./style\";\n\nexport const MainHeading = () => {\n  return (\n    <MainHeadingWrapper>\n      <h1>Klinify</h1>\n    </MainHeadingWrapper>\n  );\n};\n","import React from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { getClinicData } from \"../Redux/action\";\nimport { Image, Button, ButtonWrapper, ButtonsHeading, Heading } from \"./style\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nimport { PatientTable } from \"./PatientTable\";\nimport { MainHeading } from \"./MainHeading\";\n\nexport const Patient = (patient_name) => {\n  const dispatch = useDispatch();\n  const { clinic, isLoading } = useSelector(\n    (state) => state.clinic,\n    shallowEqual\n  );\n\n  React.useEffect(() => {\n    dispatch(getClinicData());\n  }, [dispatch]);\n\n  const [sortByTime, setSortByTime] = React.useState(null);\n  const [sortAsc, setSortAsc] = React.useState(\"asc\");\n  const [sortDesc, setSortDesc] = React.useState(\"desc\");\n  const [doctors, setDoctors] = React.useState(\"all\");\n  const [gender, setGender] = React.useState(\"all\");\n\n  // Filter conditon for Gender and Doctor\n\n  const filterCondition = ({ sex, doctor }) => {\n    const { Ava, Nelson } = doctor;\n    const { Male, Female } = sex;\n\n    let doctorCondition = true;\n    let genderCondition = true;\n\n    if (doctors === \"Ava\") {\n      doctorCondition = Ava ? true : false;\n    }\n    if (doctors === \"Nelson\") {\n      doctorCondition = Nelson ? true : false;\n    }\n    if (gender === \"Male\") {\n      genderCondition = Male ? true : false;\n    }\n\n    if (gender === \"Female\") {\n      genderCondition = Female ? true : false;\n    }\n\n    return doctorCondition && genderCondition;\n  };\n\n  // Sort Condition for arrival time\n\n  const sortCondition = (a, b) => {\n    if (sortByTime === null) {\n      return null;\n    }\n    if (sortByTime === \"Asc\") {\n      return a.arrival_time - b.arrival_time;\n    }\n    if (sortByTime === \"Desc\") {\n      return b.arrival_time - a.arrival_time;\n    }\n  };\n\n  // Sort Condition for Name\n\n  const onSortAsc = (sortAsc) => {\n    setSortAsc(sortAsc);\n  };\n\n  const onSortDesc = (sortDesc) => {\n    setSortDesc(sortDesc);\n  };\n\n  const sortedAsc = clinic.sort((a, b) => {\n    const ascending = sortAsc === \"asc\" ? -1 : 1;\n    return ascending * a.patient_name.localeCompare(b.patient_name);\n  });\n\n  const sortedDesc = clinic.sort((a, b) => {\n    const descending = sortDesc === \"desc\" ? 1 : -1;\n    return descending * a.patient_name.localeCompare(b.patient_name);\n  });\n\n  return isLoading ? (\n    <LoadingIndicator />\n  ) : (\n    <>\n      <MainHeading />\n      <div>\n        <Image\n          src=\"https://www.ambiencebiomedics.com/images/slider3.jpg\"\n          alt=\"\"\n        />\n      </div>\n      <Heading>Patients Appointment Chart</Heading>\n\n      <ButtonWrapper>\n        <div>\n          <ButtonsHeading>Sort By Arrival Time</ButtonsHeading>\n          {[\"Asc\", \"Desc\"].map((item, i) => (\n            <Button onClick={() => setSortByTime(item)}>{item}</Button>\n          ))}\n        </div>\n\n        <div>\n          <ButtonsHeading>Filter Doctors</ButtonsHeading>\n          {[\"Ava\", \"Nelson\", \"All\"].map((item, i) => (\n            <Button onClick={() => setDoctors(item)}>{item}</Button>\n          ))}\n        </div>\n\n        <div>\n          <ButtonsHeading>Filter By Gender</ButtonsHeading>\n          {[\"Male\", \"Female\", \"All\"].map((item, i) => (\n            <Button onClick={() => setGender(item)}>{item}</Button>\n          ))}\n        </div>\n\n        <div>\n          <ButtonsHeading>Sort By Name</ButtonsHeading>\n          <Button onClick={() => onSortAsc()}>Asce</Button>\n          <Button onClick={() => onSortDesc()}>Desc</Button>\n        </div>\n      </ButtonWrapper>\n\n      <table>\n        <tr>\n          <th>Id</th>\n          <th>Type</th>\n          <th>Name </th>\n          <th>Sex</th>\n          <th>Arrival Time</th>\n          <th>Doctor</th>\n        </tr>\n      </table>\n      <div>\n        {clinic &&\n          clinic\n            ?.filter(filterCondition)\n            .sort(sortCondition)\n            .map((item) => {\n              return <PatientTable key={item.id} {...item} />;\n            })}\n      </div>\n    </>\n  );\n};\n","import { Patient } from \"./Components/Patient\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Patient />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}